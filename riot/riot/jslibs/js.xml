<project name="js" default="jar">

	<property name="lib.name" value="${ant.project.name}" />
	
	<property name="package.prefix" value="org/riotfamily/resources" />
	
	<property name="package" value="${package.prefix}/${lib.name}" />
	
	<property name="overlay.dir" value="overlay" />	
	
	<property name="patch.file" value="patch" />
	
	<property name="publish.conf" value="default" />
	
	<property name="resolve.conf" value="default" />
	
	<property name="ommit-source-artifact" value="true" />
	
	<mapper id="resource.mapper" type="identity" />		
	
	<import file="../module-build.xml" />

	<target name="-check-uptodate">
		<echo>Checking for modified files for ${module.name}</echo>
		<uptodate property="module.jar.uptodate" targetfile="${module.jar}">
			<srcfiles dir="." includes="*.zip" />
			<srcfiles dir="." includes="${patch.file}" />
			<srcfiles dir="." includes="${overlay.dir}/**" />
			<srcfiles dir="." includes="${module.src.dir}/**" />
		</uptodate>
	</target>
	
	<!--
	  - Creates a jar file containing all resources found in jar.base.dir.
	  - Overlays and patches are applied when present. Invoked by the jar
	  - target if any zip-, overlay- or patch-file is newer than the existing
	  - jar.
	  -->
	<target name="jar" depends="resolve,-resource-fileset">
		<echo message="Creating jar file" />
		<property name="jar.base.dir" value="${module.build.dir}/jar" />
		<property name="jar.package.dir" value="${jar.base.dir}/${package}" />
		<delete dir="${jar.base.dir}" />
		<mkdir dir="${jar.package.dir}" />
		<copy todir="${jar.package.dir}">
			<fileset refid="resource.files" />
			<mapper refid="resource.mapper" />
		</copy>
		
		<available file="${overlay.dir}" property="overlay" />
		<antcall target="-overlay" />
		
		<available file="${patch.file}" property="patch" />
		<antcall target="-patch" />
		
		<jar basedir="${jar.base.dir}" destfile="${module.jar}" />
	</target>

	<!--
	  - Provides a fileset called 'resource.files' that is used to identify
	  - the resources that are included in the jar file.
	  -->
	<target name="-resource-fileset" depends="-unpack">
		<fileset id="resource.files" dir="${unpack.dir}" />
	</target>
	
	<!--
	  - Unpacks all zip files to unpack.dir.
	  -->
	<target name="-unpack">
		<property name="unpack.dir" value="${module.build.dir}/unpack" />
		<delete dir="${unpack.dir}" />
		<mkdir dir="${unpack.dir}" />
		<unzip dest="${unpack.dir}">
			<fileset dir=".">
				<include name="*.zip" />
			</fileset>
		</unzip>
	</target>

	<!--
	  - Copys the files from overlay.dir to jar.package.dir. Invoked by 
	  - the -jar target if the overlay directory exists. Files are copied 
	  - using the resource.mapper (which defaults to the identity mapper).
	  -->
	<target name="-overlay" if="overlay">
		<copy todir="${jar.package.dir}" overwrite="true">
			<fileset dir="${overlay.dir}" />
			<mapper refid="resource.mapper" />
		</copy>
	</target>
	
	<!--
	  - Patches the files in jar.package.dir. Invoked by the -jar target if a 
	  - patch file exists.
	  -->
	<target name="-patch" if="patch">
		<patch backups="true" patchfile="${patch.file}" dir="${jar.package.dir}" />
	</target>
	
</project>